<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.personblog.dao.CommentMapper">

    <!--保存评论-->
    <insert id="saveComment" parameterType="com.personblog.entity.Comment" useGeneratedKeys="true">
        insert into t_comment (nickname,email,content,avatar,create_time,blog_id,parent_comment_id,admin_comment)
        values (#{nickname},#{email},#{content},#{avatar},#{createTime},#{blogId},#{parentCommentId},#{adminComment});
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>


    <!--1、blogParentId是@param注入进来的为 -1 ，也就是查询所有的父节点(它已经没有父节点了)-->
    <select id="findByBlogIdParentIdNull" resultType="com.personblog.entity.Comment">
        select *
        from  t_comment c
        where c.blog_id = #{blogId} and c.parent_comment_id = #{blogParentId}
        order by c.create_time desc
    </select>

    <!--2、根据上面得到的父评论id查到他们的子评论的所有信息（如果他们有子评论的话）-->
    <select id="findByBlogIdParentIdNotNull" resultType="com.personblog.entity.Comment">
        select *
        from  t_comment c
        where c.blog_id = #{blogId} and c.parent_comment_id = #{id}
        order by c.create_time desc
    </select>

    <!--查询二级子评论-->
    <select id="findByBlogIdAndReplayId" resultType="com.personblog.entity.Comment">
        select *
        from  t_comment c
        where c.blog_id = #{blogId} and c.parent_comment_id = #{childId}
        order by c.create_time desc
    </select>

    <!--查询到博客的所有的评论id-->
    <select id="findIdsByBlogId" resultType="java.lang.Long">
        select id from t_comment where blog_id=#{id}
    </select>

    <!--删除评论-->
    <delete id="deleteComment" >
        delete from t_comment where id = #{id}
    </delete>
</mapper>
